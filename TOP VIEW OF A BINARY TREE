 vector<int> topView(Node *root)
    {
        //Your code here
        vector<int>ans;
        if(!root) return  ans;
        map<int,int> m;
        queue<pair<Node *,int>>q;
        q.push({root,0});
        
        while(!q.empty())
        {
            Node *t = q.front().first;
            int h = q.front().second;
            q.pop();
            
            if(!m[h]) m[h]=t->data;   // agar map m pahele se voh element nhi h
            if(t->left) q.push({t->left,h-1});
            if(t->right) q.push({t->right,h+1});
        }
        for(auto x:m) cout<<x.second<<" ";
    }


TIME COMPLEXITY = O(NLOGN)
SPACE COMPLEXITY = O(N)
