//remove duplicates in an unsorted linkedlist

#include<iostream>
#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    Node *next;
}*first=NULL;

void create(int A[],int n)
{
    int i;
    Node *last,*t;
    
    first=new Node;
    first->data=A[0];
    first->next=NULL;
    last=first;
    
    for(int i=1;i<n;i++)
    {
        t=new Node;
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;
    }
}

void display(struct Node *p)
{
   while(p!=NULL)
   {
       cout<<p->data<<" ";
       p=p->next;
   }
}

void removeduplicates(Node *head)
{
    map<int,int>m;
    
    Node *curr=head;
    m[curr->data]=1;
    Node *prev=curr;
    curr=curr->next;
    
    while(curr!=NULL)
    {
        if(m[curr->data])
        {
            prev->next=curr->next;
            free(curr);
        }
        else
        {
            m[curr->data]=1;
            prev=curr;
        }
        curr=prev->next;
    }
}


int main()
{
    int A[]={1,3,6,3,2,7,7,1,9,8,11};
    int n= sizeof(A) / sizeof(A[0]);
    create(A,n);
    cout<<"ORIGINAL LINKEDLIST "<<endl;
    display(first);
    cout<<endl;
    removeduplicates(first);
    cout<<"NEW LINKEDLIST"<<endl;
    display(first);
    return 0;
}
