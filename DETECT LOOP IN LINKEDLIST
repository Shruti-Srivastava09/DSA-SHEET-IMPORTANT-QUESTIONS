//detect loop in linked list 

#include<iostream>
#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    struct Node *next;
}*first=NULL;


void create(int A[],int n)
{
    int i;
    struct Node *t,*last;
    first=new Node;
    first->data=A[0];
    first->next=NULL;
    last=first;
    
    for(int i=0;i<n;i++)
    {
        t=new Node;
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;
    }
    
}

bool detectloop(Node *head)
{
    head->next->next->next->next->next=head;   
    
    Node *p= head;
    Node *q= head;
    
    while(p!=NULL && p->next!=NULL)
    {
        q=q->next;
        p=p->next->next;
        if(p==q)
        {
            return true;
        }
        
    }
    return false;
}


void display(struct Node *p)
{
    while(p!=NULL)
    {
        cout<<p->data<<" ";
        p=p->next;
    }
}



int main()
{
    int A[]={1,2,3,4,5};
    int n = sizeof(A) / sizeof(A[0]);
    create(A,n);
    cout<<"DISPLAY THE LINKEDLIST "<<endl;
    display(first);
    
    cout<<endl;
    
    if(detectloop(first))
      cout<<"LOOP DETECTED"<<endl;
    else{
        cout<<"NO LOOP FOUND"<<endl;
    }  

    return 0;
}
