#include<iostream>
#include<bits/stdc++.h>
using namespace std;


struct Node
{
    Node *next;
    int data;
}*head=NULL,*head2=NULL;

void create(int A[],int n)
{
    Node *t,*last;
    
    head=new Node;
    head->data=A[0];
    head->next=NULL;
    last=head;
    
    for(int i=1;i<n;i++)
    {
        t=new Node;
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;
    }
}

void create2(int B[],int m)
{
    Node *t1,*last1;
    
    head2=new Node;
    head2->data=B[0];
    head2->next=NULL;
    last1=head2;
    
    for(int i=1;i<m;i++)
    {
        t1=new Node;
        t1->data=B[i];
        t1->next=NULL;
        last1->next=t1;
        last1=t1;
    }
}


void display1(Node *curr)
{
    while(curr!=NULL)
    {
        cout<<curr->data<<" ";
        curr=curr->next;
    }
    cout<<endl;
}

void display2(Node *curr)
{
    while(curr!=NULL)
    {
        cout<<curr->data<<" ";
        curr=curr->next;
    }
    cout<<endl;
}

long long getnum(Node *head)
{
   long long result=0;
  
  while(head!=NULL)
  {
      result = (head->data+result*10)%1000000007;
      head= head->next;
  }
   return result;
}
 
/*You are required to complete this method*/
long long  multiplyTwoLists (Node* l1, Node* l2)
{
  //Your code here
  return ((getnum(l1)*getnum(l2))%1000000007);
 
}

int main()
{
    int A[]={3,2,1};
    int n = sizeof(A) / sizeof(A[0]);
    int B[]={1,2};
    int m = sizeof(B) / sizeof(B[0]);
    create(A,n);
    create2(B,m);
    display1(head);
    display2(head2);
    
    
    

    return 0;
}
