//reverse a linkedlist in group of given size 

#include<iostream>
#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    Node *next;
}*first=NULL;

void create(int A[],int n)
{
    Node *last,*t;
    int i;
    
    first=new Node;
    first->data=A[0];
    first->next=NULL;
    last=first;
    
    for(int i=1;i<n;i++)
    {
        t=new Node;
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;
    }
}

void display(struct Node *p)
{
    while(p!=NULL)
    {
        cout<<p->data<<" ";
        p=p->next;
    }
}

struct Node *reverse(struct Node *head,int k)
{
    Node *curnext;
    Node *prev=NULL;
    int c=0;
    
    Node *p=head;
    while(p!=NULL && c<k)
    {
        curnext=p->next;
        p->next=prev;
        prev=p;
        p=curnext;
        c++;
    }
    if(curnext!=NULL)
      head->next=reverse(curnext,k);
      
      return prev;
}

int main()
{
    int A[]={1,2,3,4,5,6,7,8,9};
    int n= sizeof(A) / sizeof(A[0]);
    create(A,n);
    
    cout<<"ORIGINAL LINKEDLIST IS ";
    display(first);
    cout<<endl;
    
    int k;
    cin>>k;
    
    first=reverse(first,k);
    cout <<"Reversed Linked list \n";
    display(first);
    
    return 0;
}
